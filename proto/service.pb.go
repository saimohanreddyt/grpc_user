// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type UserRequest struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserRequest) Reset()         { *m = UserRequest{} }
func (m *UserRequest) String() string { return proto.CompactTextString(m) }
func (*UserRequest) ProtoMessage()    {}
func (*UserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{0}
}

func (m *UserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserRequest.Unmarshal(m, b)
}
func (m *UserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserRequest.Marshal(b, m, deterministic)
}
func (m *UserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserRequest.Merge(m, src)
}
func (m *UserRequest) XXX_Size() int {
	return xxx_messageInfo_UserRequest.Size(m)
}
func (m *UserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UserRequest proto.InternalMessageInfo

func (m *UserRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type UserResponse struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Fname                string   `protobuf:"bytes,2,opt,name=fname,proto3" json:"fname,omitempty"`
	City                 string   `protobuf:"bytes,3,opt,name=city,proto3" json:"city,omitempty"`
	Phone                int64    `protobuf:"varint,4,opt,name=phone,proto3" json:"phone,omitempty"`
	Height               int64    `protobuf:"varint,5,opt,name=height,proto3" json:"height,omitempty"`
	Married              string   `protobuf:"bytes,6,opt,name=married,proto3" json:"married,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserResponse) Reset()         { *m = UserResponse{} }
func (m *UserResponse) String() string { return proto.CompactTextString(m) }
func (*UserResponse) ProtoMessage()    {}
func (*UserResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{1}
}

func (m *UserResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserResponse.Unmarshal(m, b)
}
func (m *UserResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserResponse.Marshal(b, m, deterministic)
}
func (m *UserResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserResponse.Merge(m, src)
}
func (m *UserResponse) XXX_Size() int {
	return xxx_messageInfo_UserResponse.Size(m)
}
func (m *UserResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UserResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UserResponse proto.InternalMessageInfo

func (m *UserResponse) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UserResponse) GetFname() string {
	if m != nil {
		return m.Fname
	}
	return ""
}

func (m *UserResponse) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *UserResponse) GetPhone() int64 {
	if m != nil {
		return m.Phone
	}
	return 0
}

func (m *UserResponse) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *UserResponse) GetMarried() string {
	if m != nil {
		return m.Married
	}
	return ""
}

type UserStringResponse struct {
	Response             string   `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserStringResponse) Reset()         { *m = UserStringResponse{} }
func (m *UserStringResponse) String() string { return proto.CompactTextString(m) }
func (*UserStringResponse) ProtoMessage()    {}
func (*UserStringResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{2}
}

func (m *UserStringResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserStringResponse.Unmarshal(m, b)
}
func (m *UserStringResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserStringResponse.Marshal(b, m, deterministic)
}
func (m *UserStringResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserStringResponse.Merge(m, src)
}
func (m *UserStringResponse) XXX_Size() int {
	return xxx_messageInfo_UserStringResponse.Size(m)
}
func (m *UserStringResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UserStringResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UserStringResponse proto.InternalMessageInfo

func (m *UserStringResponse) GetResponse() string {
	if m != nil {
		return m.Response
	}
	return ""
}

type UserListResponse struct {
	Users                []*UserRequest `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *UserListResponse) Reset()         { *m = UserListResponse{} }
func (m *UserListResponse) String() string { return proto.CompactTextString(m) }
func (*UserListResponse) ProtoMessage()    {}
func (*UserListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{3}
}

func (m *UserListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserListResponse.Unmarshal(m, b)
}
func (m *UserListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserListResponse.Marshal(b, m, deterministic)
}
func (m *UserListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserListResponse.Merge(m, src)
}
func (m *UserListResponse) XXX_Size() int {
	return xxx_messageInfo_UserListResponse.Size(m)
}
func (m *UserListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UserListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UserListResponse proto.InternalMessageInfo

func (m *UserListResponse) GetUsers() []*UserRequest {
	if m != nil {
		return m.Users
	}
	return nil
}

func init() {
	proto.RegisterType((*UserRequest)(nil), "proto.UserRequest")
	proto.RegisterType((*UserResponse)(nil), "proto.UserResponse")
	proto.RegisterType((*UserStringResponse)(nil), "proto.UserStringResponse")
	proto.RegisterType((*UserListResponse)(nil), "proto.UserListResponse")
}

func init() {
	proto.RegisterFile("service.proto", fileDescriptor_a0b84a42fa06f626)
}

var fileDescriptor_a0b84a42fa06f626 = []byte{
	// 328 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x90, 0xcd, 0x4e, 0xc2, 0x40,
	0x14, 0x85, 0xd3, 0x42, 0xf9, 0xb9, 0xf8, 0x97, 0xab, 0xc1, 0xb1, 0xc6, 0x84, 0x74, 0xd5, 0x55,
	0x31, 0xb8, 0x31, 0xc1, 0x8d, 0x51, 0xe3, 0xc6, 0x55, 0x09, 0x0f, 0x00, 0xcc, 0xa5, 0x4c, 0x02,
	0x6d, 0x9d, 0x99, 0x9a, 0xf0, 0x16, 0x3e, 0x8d, 0xcf, 0x67, 0x3a, 0x53, 0x08, 0x10, 0xdd, 0xb0,
	0x9a, 0x39, 0x67, 0xce, 0x99, 0x7b, 0xf3, 0xc1, 0xa9, 0x22, 0xf9, 0x25, 0x66, 0x14, 0xe5, 0x32,
	0xd3, 0x19, 0x7a, 0xe6, 0xf0, 0x6f, 0x93, 0x2c, 0x4b, 0x96, 0xd4, 0x37, 0x6a, 0x5a, 0xcc, 0xfb,
	0xb4, 0xca, 0xf5, 0xda, 0x66, 0x82, 0x3b, 0xe8, 0x8c, 0x15, 0xc9, 0x98, 0x3e, 0x0b, 0x52, 0x1a,
	0xcf, 0xc0, 0x15, 0x9c, 0x39, 0x3d, 0x27, 0xac, 0xc5, 0xae, 0xe0, 0xc1, 0xb7, 0x03, 0x27, 0xf6,
	0x5d, 0xe5, 0x59, 0xaa, 0xe8, 0x30, 0x80, 0x57, 0xe0, 0xcd, 0xd3, 0xc9, 0x8a, 0x98, 0xdb, 0x73,
	0xc2, 0x76, 0x6c, 0x05, 0x22, 0xd4, 0x67, 0x42, 0xaf, 0x59, 0xcd, 0x98, 0xe6, 0x5e, 0x26, 0xf3,
	0x45, 0x96, 0x12, 0xab, 0x9b, 0xb2, 0x15, 0xd8, 0x85, 0xc6, 0x82, 0x44, 0xb2, 0xd0, 0xcc, 0x33,
	0x76, 0xa5, 0x90, 0x41, 0x73, 0x35, 0x91, 0x52, 0x10, 0x67, 0x0d, 0xf3, 0xc9, 0x46, 0x06, 0xf7,
	0x80, 0xe5, 0x46, 0x23, 0x2d, 0x45, 0x9a, 0x6c, 0xf7, 0xf2, 0xa1, 0x25, 0xab, 0xbb, 0xd9, 0xae,
	0x1d, 0x6f, 0x75, 0xf0, 0x04, 0x17, 0x65, 0xe3, 0x43, 0x28, 0xbd, 0xcd, 0x87, 0xe0, 0x15, 0x8a,
	0xa4, 0x62, 0x4e, 0xaf, 0x16, 0x76, 0x06, 0x68, 0x71, 0x44, 0x3b, 0x2c, 0x62, 0x1b, 0x18, 0xfc,
	0xb8, 0x70, 0x5e, 0xda, 0x2f, 0xb2, 0xe0, 0x23, 0xcb, 0x17, 0x87, 0xd0, 0x7a, 0x27, 0x5d, 0xba,
	0x0a, 0xbb, 0x91, 0xe5, 0x1b, 0x6d, 0xf8, 0x46, 0x6f, 0x25, 0x5f, 0xff, 0x7a, 0xe7, 0xcb, 0xbd,
	0xd1, 0x03, 0x68, 0x56, 0x65, 0xfc, 0x63, 0xac, 0x7f, 0xb9, 0xe7, 0x55, 0x9d, 0x47, 0x68, 0x3e,
	0x73, 0xfe, 0x6f, 0xe7, 0x66, 0xc7, 0x3b, 0x00, 0x33, 0x04, 0x78, 0xa5, 0x25, 0x69, 0x3a, 0xb2,
	0x3c, 0xce, 0xf9, 0xe4, 0xa8, 0xf2, 0xb4, 0x61, 0x5e, 0x1e, 0x7e, 0x03, 0x00, 0x00, 0xff, 0xff,
	0xf6, 0x86, 0xd9, 0xbe, 0x96, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// UserCrudServiceClient is the client API for UserCrudService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserCrudServiceClient interface {
	GetUsers(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*UserListResponse, error)
	GetUser(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*UserResponse, error)
	AddUser(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*UserStringResponse, error)
	DeleteUser(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*UserStringResponse, error)
	UpdateUser(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*UserStringResponse, error)
}

type userCrudServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewUserCrudServiceClient(cc grpc.ClientConnInterface) UserCrudServiceClient {
	return &userCrudServiceClient{cc}
}

func (c *userCrudServiceClient) GetUsers(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*UserListResponse, error) {
	out := new(UserListResponse)
	err := c.cc.Invoke(ctx, "/proto.UserCrudService/GetUsers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userCrudServiceClient) GetUser(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*UserResponse, error) {
	out := new(UserResponse)
	err := c.cc.Invoke(ctx, "/proto.UserCrudService/GetUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userCrudServiceClient) AddUser(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*UserStringResponse, error) {
	out := new(UserStringResponse)
	err := c.cc.Invoke(ctx, "/proto.UserCrudService/AddUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userCrudServiceClient) DeleteUser(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*UserStringResponse, error) {
	out := new(UserStringResponse)
	err := c.cc.Invoke(ctx, "/proto.UserCrudService/DeleteUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userCrudServiceClient) UpdateUser(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*UserStringResponse, error) {
	out := new(UserStringResponse)
	err := c.cc.Invoke(ctx, "/proto.UserCrudService/UpdateUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserCrudServiceServer is the server API for UserCrudService service.
type UserCrudServiceServer interface {
	GetUsers(context.Context, *empty.Empty) (*UserListResponse, error)
	GetUser(context.Context, *UserRequest) (*UserResponse, error)
	AddUser(context.Context, *UserRequest) (*UserStringResponse, error)
	DeleteUser(context.Context, *UserRequest) (*UserStringResponse, error)
	UpdateUser(context.Context, *UserRequest) (*UserStringResponse, error)
}

// UnimplementedUserCrudServiceServer can be embedded to have forward compatible implementations.
type UnimplementedUserCrudServiceServer struct {
}

func (*UnimplementedUserCrudServiceServer) GetUsers(ctx context.Context, req *empty.Empty) (*UserListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUsers not implemented")
}
func (*UnimplementedUserCrudServiceServer) GetUser(ctx context.Context, req *UserRequest) (*UserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUser not implemented")
}
func (*UnimplementedUserCrudServiceServer) AddUser(ctx context.Context, req *UserRequest) (*UserStringResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddUser not implemented")
}
func (*UnimplementedUserCrudServiceServer) DeleteUser(ctx context.Context, req *UserRequest) (*UserStringResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteUser not implemented")
}
func (*UnimplementedUserCrudServiceServer) UpdateUser(ctx context.Context, req *UserRequest) (*UserStringResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateUser not implemented")
}

func RegisterUserCrudServiceServer(s *grpc.Server, srv UserCrudServiceServer) {
	s.RegisterService(&_UserCrudService_serviceDesc, srv)
}

func _UserCrudService_GetUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserCrudServiceServer).GetUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.UserCrudService/GetUsers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserCrudServiceServer).GetUsers(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserCrudService_GetUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserCrudServiceServer).GetUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.UserCrudService/GetUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserCrudServiceServer).GetUser(ctx, req.(*UserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserCrudService_AddUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserCrudServiceServer).AddUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.UserCrudService/AddUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserCrudServiceServer).AddUser(ctx, req.(*UserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserCrudService_DeleteUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserCrudServiceServer).DeleteUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.UserCrudService/DeleteUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserCrudServiceServer).DeleteUser(ctx, req.(*UserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserCrudService_UpdateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserCrudServiceServer).UpdateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.UserCrudService/UpdateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserCrudServiceServer).UpdateUser(ctx, req.(*UserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserCrudService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.UserCrudService",
	HandlerType: (*UserCrudServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetUsers",
			Handler:    _UserCrudService_GetUsers_Handler,
		},
		{
			MethodName: "GetUser",
			Handler:    _UserCrudService_GetUser_Handler,
		},
		{
			MethodName: "AddUser",
			Handler:    _UserCrudService_AddUser_Handler,
		},
		{
			MethodName: "DeleteUser",
			Handler:    _UserCrudService_DeleteUser_Handler,
		},
		{
			MethodName: "UpdateUser",
			Handler:    _UserCrudService_UpdateUser_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service.proto",
}
